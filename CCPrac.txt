Experiment 8  Microsoft Azure

open this website:
https://shell.azure.com/
open the cloud shell that is in the top right area of azure
now type all these commands in cloud shell:

? mkdir quickstart
? cd quickstart
? git clone https://github.com/Azure-Samples/html-docs-hello-world.git
? cd html-docs-hello-world
? az webapp up --location westeurope --name <app_name> --html
delete the group to end:
? az group delete --name appsvc_rg_Windows_westeurope


========================================================

Eperiment 10 Google Engine

curl https://sdk.cloud.google.com | bash
Exit terminal and open new terminal 
gcloud init

==========================================================

Experiment No. 10
Installation and Configuration of virtualization using KVM

https://www.linuxfordevices.com/tutorials/ubuntu/fix-unable-to-acquire-the-dpkg-frontend-lock

Open terminal
sudo apt install virt-manager
sudo apt install cpu-checker
sudo virt-manager

VM opens -> select kvm -> New Virtual machine -> upload iso and configure -> hilao

ISO Win7 : https://tech-latest.com/download-windows-7-iso/

Optional codes:

sudo virt-manager // is a desktop user interface for managing virtual machines through libvirt
sudo apt install cpu-checker // ibvirt is an open-source API, daemon and management tool for
managing platform virtualization. It can be used to manage KVM,
sudo kvm-ok
sudo apt update
sudo apt install qemu qemu-kvm libvirt-bin bridge-utils virt-manager
sudo service libvirtd start
sudo update-rc.d libvirtd enable
service libvirtd status
sudo vi /etc/netplan/50-cloud-init.yaml
sudo netplan apply //a utility for easily configuring networking on a linux system.
sudo netplan --debug apply
sudo networkctl status -a // Creating a bridge for virtual machine reCreating a bridge
for virtual machinidge for virtual machines
Ifconfig ///displays the current configuration for a network interface when no optional
parameters are supplied
sudo virt-manager

===============================================================

Experiment No. 11
Creating an Application in SalesForce.com using Apex programming Language.

Go to Settings Gear icon -> Developer Console -> File -> New -> ApexClass -> Write code:

Code:
public class Search {
    public static void main(){
        system.debug('Hello world!!');
    }
}

public class LinearSearch {
    public static void main(Integer key) {
        System.debug('Linear Search');
        
        integer s = -1;
        
        List<integer> lon = new List<integer> ();
        
        lon.add(3);
        lon.add(4);
        lon.add(5);
        lon.add(6);
        
        System.debug('List: ' + lon);
        
        for(integer i = 0; i < lon.size(); i++) {
            if(key == lon[i]) {
                s = 1;
            }
        }
        if(s == 1) {
            System.debug('Element found');
        }
        else {
            System.debug('Element not found');
        }
    }
}

List<Integer> IntegerList = new List<integer>();
IntegerList.add(9);
IntegerList.add(4);
IntegerList.add(12);
IntegerList.add(10);
Integer T = 10;
Integer L = 0;
Integer R = IntegerList.size() - 1;
Integer m =0;
Integer mid;
while(L <= R){
    system.debug(m);    
    mid=(L+R)/2;
    if(IntegerList[mid] == T){
           system.debug(IntegerList[mid]);
        break;
    }     
    else if(T < IntegerList[mid]){
        R = mid - 1;
    }    
    else{
        L = mid + 1;
    }
       
   m = m + 1;
}


Go to Debug -> Open execute anonymous window -> write Search.main(); -> OpenLog tick -> Execute -> Debug Only.


===============================================================

Experiment No. 12
Design and develop custom Application (Mini Project) using Sales force Cloud.

setup -> create -> custom object -> give label -> fuck around find out -> tick allow reports and allow activities -> save 
add fields to the object in the object manager
create tabs in quickfind (search tabs)
app manager -> new lightning app -> fafo (give its configurations)
app launcher -> launch app -> new contact


